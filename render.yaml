services:
  # Backend API Service
  - type: web
    name: kgotla-backend-api
    runtime: node
    plan: starter
    region: oregon
    branch: main
    rootDir: backend
    buildCommand: npm install && npm run build
    startCommand: npm start
    healthCheckPath: /api/health
    disk:
      name: kgotla-backend-disk
      size: 1GB
      mount: /opt/render/project/src/uploads
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: kgotla-database
          property: connectionString
      - key: JWT_ACCESS_SECRET
        generateValue: true
      - key: JWT_REFRESH_SECRET
        generateValue: true
      - key: JWT_ACCESS_EXPIRES_IN
        value: "15m"
      - key: JWT_REFRESH_EXPIRES_IN
        value: "7d"
      - key: API_URL
        fromService:
          type: web
          name: kgotla-backend-api
          property: host
      - key: CLIENT_URL
        value: "https://kgotla-frontend.vercel.app"
      - key: CORS_ORIGINS
        value: "https://kgotla-frontend.vercel.app,http://localhost:3000"
      - key: RATE_LIMIT_WINDOW_MS
        value: "900000"
      - key: RATE_LIMIT_MAX_REQUESTS
        value: "100"
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: GOOGLE_CALLBACK_URL
        fromService:
          type: web
          name: kgotla-backend-api
          property: host
          envVarTemplate: "https://${RENDER_EXTERNAL_HOSTNAME}/api/auth/google/callback"
      - key: SENDGRID_API_KEY
        sync: false
      - key: EMAIL_FROM
        value: "noreply@kgotla.app"
    autoDeploy: true

databases:
  # PostgreSQL Database
  - name: kgotla-database
    databaseName: kgotla_production
    user: kgotla_user
    plan: starter
    region: oregon
    postgresMajorVersion: "15"

# Background Workers (optional)
# - type: worker
#   name: kgotla-email-worker
#   runtime: node
#   plan: starter
#   region: oregon
#   branch: main
#   rootDir: backend
#   buildCommand: npm install && npm run build
#   startCommand: npm run worker:email
#   envVars:
#     - key: NODE_ENV
#       value: production
#     - key: DATABASE_URL
#       fromDatabase:
#         name: kgotla-database
#         property: connectionString
#     - key: SENDGRID_API_KEY
#       sync: false

# Cron Jobs (optional)
# - type: cron
#   name: kgotla-cleanup-job
#   runtime: node
#   plan: starter
#   region: oregon
#   branch: main
#   rootDir: backend
#   buildCommand: npm install && npm run build
#   startCommand: npm run cleanup:expired-tokens
#   schedule: "0 2 * * *"  # Daily at 2 AM
#   envVars:
#     - key: NODE_ENV
#       value: production
#     - key: DATABASE_URL
#       fromDatabase:
#         name: kgotla-database
#         property: connectionString